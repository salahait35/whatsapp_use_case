@model WebappWhatsapp.Models.ChatViewModel

@{
    ViewData["Title"] = "Messaging App";
}

@if (Model == null)
{
    <div class="text-danger">Error: The model is null. Ensure the controller passes a valid model to the view.</div>
}
else
{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewData["Title"]</title>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body {
                background-color: #f4f5f7;
            }

            .chat-container {
                height: 100vh;
            }

            .contacts-list {
                height: calc(100vh - 60px);
                overflow-y: auto;
            }

            .chat-messages {
                height: calc(100vh - 120px);
                overflow-y: auto;
            }

            .message-input {
                border-top: 1px solid #ccc;
                padding: 10px;
            }

            .message {
                padding: 10px;
                border-radius: 10px;
                margin-bottom: 10px;
            }

            .message-sent {
                background-color: #007bff;
                color: white;
                align-self: flex-end;
            }

            .message-received {
                background-color: #e9ecef;
                align-self: flex-start;
            }

            .message-time {
                font-size: 0.75rem;
                color: #888;
            }
        </style>
    </head>
    <body>
        <header class="bg-primary text-white p-3">
            <div class="container-fluid d-flex justify-content-between align-items-center">
                <h1 class="h5 mb-0">Messaging App</h1>
                @if (Model?.CurrentUser?.Email != null)
                {
                    <p class="mb-0">Connected as: <strong>@Model.CurrentUser.Email</strong></p>
                }
            </div>
        </header>

        <div class="container-fluid chat-container">
            <div class="row h-100">
                <!-- Sidebar Contacts -->
                <div class="col-md-4 bg-white p-3">
                    <h5 class="mb-4 d-flex justify-content-between align-items-center">
                        Contacts
                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createConversationModal">
                            <i class="fas fa-plus"></i> Nouvelle conversation
                        </button>
                    </h5>
                    <div class="contacts-list">
                        @if (Model?.Conversations == null)
                        {
                            <p class="text-danger">Error: The Conversations list is null or the model is not initialized properly.</p>
                        }
                        else if (!Model.Conversations.Any())
                        {
                            <p class="text-muted">No conversations available.</p>
                        }
                        else
                        {
                            foreach (var conversation in Model.Conversations)
                            {
                                var lastMessage = conversation.LastMessage ?? "No messages yet";
                                <div class="d-flex align-items-center p-2 border-bottom">
                                    <img src="@Url.Content("~/images/default-avatar.png")" alt="avatar" class="rounded-circle me-3" width="50" height="50">
                                    <div>
                                        <p class="fw-bold mb-0">
                                            @if (conversation.Members != null)
                                            {
                                                @string.Join(", ", conversation.Members)
                                            }
                                            else
                                            {
                                                <span class="text-danger">Error: Members list is null.</span>
                                            }
                                        </p>
                                        <p class="text-muted small mb-0">@lastMessage</p>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <!-- Chat Section -->
                <div class="col-md-8 d-flex flex-column">
                    <div class="chat-messages p-3 flex-grow-1">
                        @if (Model == null)
                        {
                            <p class="text-danger">Error: The model is null. Please ensure the controller is passing a valid model to the view.</p>
                        }
                        else if (Model.Messages == null)
                        {
                            <p class="text-warning">Warning: The Messages list is null. Please check the initialization in the controller.</p>
                        }
                        else if (!Model.Messages.Any())
                        {
                            <p class="text-muted">No messages available.</p>
                        }
                        else
                        {
                            foreach (var message in Model.Messages)
                            {
                                var messageClass = message.SenderId == Model.CurrentUser.id ? "message-sent" : "message-received";
                                var messageTime = message.LastMessageTimestamp.ToString("HH:mm");

                                <div class="d-flex @messageClass mb-3">
                                    @if (message.SenderId != Model.CurrentUser.id)
                                    {
                                        <img src="@Url.Content("~/images/default-avatar.png")" alt="avatar" class="rounded-circle me-2" width="40" height="40">
                                    }
                                    <div>
                                        <p class="message @messageClass">@message.Content</p>
                                        <p class="message-time text-muted">@messageTime</p>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="message-input d-flex align-items-center">
                        <input type="text" class="form-control form-control-lg me-2" placeholder="Type a message">
                        <button class="btn btn-primary">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Fenêtre modale pour créer une conversation -->
        <div class="modal fade" id="createConversationModal" tabindex="-1" aria-labelledby="createConversationModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createConversationModalLabel">Créer une nouvelle conversation</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="userEmail" class="form-label">Email de l'utilisateur</label>
                            <input type="email" class="form-control" id="userEmail" placeholder="Entrez l'email de l'utilisateur">
                        </div>
                        <div id="errorMessage" class="text-danger d-none"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="button" class="btn btn-primary" id="createConversationButton">Créer</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Script -->
        <script>
            document.getElementById("createConversationButton").addEventListener("click", async function () {
                const email = document.getElementById("userEmail").value;
                const errorMessage = document.getElementById("errorMessage");

                if (!email) {
                    errorMessage.textContent = "Veuillez entrer un email.";
                    errorMessage.classList.remove("d-none");
                    return;
                }

                try {
                    const response = await fetch('/Conversation/Create', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email })
                    });

                    const result = await response.json();

                    if (response.ok) {
                        location.reload(); // Rafraîchir les conversations sans recharger toute la page
                    } else {
                        errorMessage.textContent = result.message || "Une erreur s'est produite.";
                        errorMessage.classList.remove("d-none");
                    }
                } catch (error) {
                    errorMessage.textContent = "Erreur de connexion au serveur.";
                    errorMessage.classList.remove("d-none");
                }
            });
        </script>
    </body>
    </html>
}
